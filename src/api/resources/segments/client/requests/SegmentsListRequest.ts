/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Beehiiv from "../../../../index.js";

/**
 * @example
 *     {}
 */
export interface SegmentsListRequest {
    /**
     * Optionally filter the results by the segment's type.
     */
    type?: Beehiiv.SegmentType;
    /**
     * Optionally filter the results by the segment's status.
     */
    status?: Beehiiv.SegmentRequestStatus;
    /**
     * A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.
     */
    limit?: number;
    /**
     * Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br>If not specified, results 1-10 from page 1 will be returned.
     */
    page?: number;
    /**
     * The field that the results are sorted by. Defaults to created<br> `created` - The time in which the segment was first created.<br> `last_calculated` - The time that the segment last completed calculation. Measured in seconds since the Unix epoch.
     */
    order_by?: Beehiiv.SegmentOrderBy;
    /**
     * The direction that the results are sorted in. Defaults to asc<br> `asc` - Ascending, sorts from smallest to largest.<br> `desc` - Descending, sorts from largest to smallest.
     */
    direction?: Beehiiv.RequestDirection;
    /**
     * Optionally expand the response to include additional data. <br> `stats` - Requests the most recently calculated statistics for a segment. <br> Segment stats are recalculated once daily around 7 a.m. UTC for dynamic segments, but can be manually recalculated at any time in the dashboard. Manual and static segments only calculate once upon upload or creation.
     */
    "expand[]"?: Beehiiv.SegmentsExpandItems[];
}
