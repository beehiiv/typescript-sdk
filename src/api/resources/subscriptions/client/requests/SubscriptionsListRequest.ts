/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Beehiiv from "../../../..";

/**
 * @example
 *     {
 *         email: "clark@dailyplanet.com"
 *     }
 *
 * @example
 *     {
 *         expand: Beehiiv.SubscriptionsListRequestExpandItem.Stats,
 *         status: Beehiiv.SubscriptionsListRequestStatus.Validating,
 *         tier: Beehiiv.SubscriptionsListRequestTier.Free,
 *         limit: 1,
 *         page: 1,
 *         email: "string",
 *         orderBy: Beehiiv.SubscriptionsListRequestOrderBy.Created,
 *         direction: Beehiiv.SubscriptionsListRequestDirection.Asc
 *     }
 *
 * @example
 *     {
 *         expand: Beehiiv.SubscriptionsListRequestExpandItem.Stats,
 *         status: Beehiiv.SubscriptionsListRequestStatus.Validating,
 *         tier: Beehiiv.SubscriptionsListRequestTier.Free,
 *         limit: 1,
 *         page: 1,
 *         email: "string",
 *         orderBy: Beehiiv.SubscriptionsListRequestOrderBy.Created,
 *         direction: Beehiiv.SubscriptionsListRequestDirection.Asc
 *     }
 *
 * @example
 *     {
 *         expand: Beehiiv.SubscriptionsListRequestExpandItem.Stats,
 *         status: Beehiiv.SubscriptionsListRequestStatus.Validating,
 *         tier: Beehiiv.SubscriptionsListRequestTier.Free,
 *         limit: 1,
 *         page: 1,
 *         email: "string",
 *         orderBy: Beehiiv.SubscriptionsListRequestOrderBy.Created,
 *         direction: Beehiiv.SubscriptionsListRequestDirection.Asc
 *     }
 *
 * @example
 *     {
 *         expand: Beehiiv.SubscriptionsListRequestExpandItem.Stats,
 *         status: Beehiiv.SubscriptionsListRequestStatus.Validating,
 *         tier: Beehiiv.SubscriptionsListRequestTier.Free,
 *         limit: 1,
 *         page: 1,
 *         email: "string",
 *         orderBy: Beehiiv.SubscriptionsListRequestOrderBy.Created,
 *         direction: Beehiiv.SubscriptionsListRequestDirection.Asc
 *     }
 *
 * @example
 *     {
 *         expand: Beehiiv.SubscriptionsListRequestExpandItem.Stats,
 *         status: Beehiiv.SubscriptionsListRequestStatus.Validating,
 *         tier: Beehiiv.SubscriptionsListRequestTier.Free,
 *         limit: 1,
 *         page: 1,
 *         email: "string",
 *         orderBy: Beehiiv.SubscriptionsListRequestOrderBy.Created,
 *         direction: Beehiiv.SubscriptionsListRequestDirection.Asc
 *     }
 */
export interface SubscriptionsListRequest {
    /**
     * Optional list of expandable objects.<br />`stats` - Returns statistics about the subscription(s).<br />`custom_fields` - Returns an array of custom field values that have been set on the subscription.<br />`referrals` - Returns an array of subscriptions with limited data - `id`, `email`, and `status`. These are the subscriptions that were referred by this subscription.
     */
    expand?: Beehiiv.SubscriptionsListRequestExpandItem | Beehiiv.SubscriptionsListRequestExpandItem[];
    /**
     * Optionally filter the results by a status
     */
    status?: Beehiiv.SubscriptionsListRequestStatus;
    /**
     * Optionally filter the results by a their tier
     */
    tier?: Beehiiv.SubscriptionsListRequestTier;
    /**
     * A limit on the number of objects to be returned. The limit can range between 1 and 100, and the default is 10.
     */
    limit?: number;
    /**
     * Pagination returns the results in pages. Each page contains the number of results specified by the `limit` (default: 10).<br />If not specified, results 1-10 from page 1 will be returned.
     */
    page?: number;
    /**
     * Optional email address to find a subscription.<br />This param must be an exact match and is case insensitive.
     */
    email?: string;
    /**
     * The field that the results are sorted by. Defaults to created<br /> `created` - The time in which the subscription was first created.<br /> `email` - The email address of the subscription.
     */
    orderBy?: Beehiiv.SubscriptionsListRequestOrderBy;
    /**
     * The direction that the results are sorted in. Defaults to asc<br /> `asc` - Ascending, sorts from smallest to largest.<br /> `desc` - Descending, sorts from largest to smallest.
     */
    direction?: Beehiiv.SubscriptionsListRequestDirection;
}
