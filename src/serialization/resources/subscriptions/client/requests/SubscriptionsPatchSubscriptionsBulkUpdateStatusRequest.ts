/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as beehiiv from "../../../../../api";
import * as core from "../../../../../core";
import { SubscriptionsPatchSubscriptionsBulkUpdateStatusRequestNewStatus } from "../../types/SubscriptionsPatchSubscriptionsBulkUpdateStatusRequestNewStatus";

export const SubscriptionsPatchSubscriptionsBulkUpdateStatusRequest: core.serialization.Schema<
    serializers.SubscriptionsPatchSubscriptionsBulkUpdateStatusRequest.Raw,
    beehiiv.SubscriptionsPatchSubscriptionsBulkUpdateStatusRequest
> = core.serialization.object({
    subscriptionIds: core.serialization.property(
        "subscription_ids",
        core.serialization.list(core.serialization.string())
    ),
    newStatus: core.serialization.property(
        "new_status",
        SubscriptionsPatchSubscriptionsBulkUpdateStatusRequestNewStatus
    ),
});

export declare namespace SubscriptionsPatchSubscriptionsBulkUpdateStatusRequest {
    interface Raw {
        subscription_ids: string[];
        new_status: SubscriptionsPatchSubscriptionsBulkUpdateStatusRequestNewStatus.Raw;
    }
}
