/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Beehiiv from "../../../../api/index";
import * as core from "../../../../core";

export const GetPublicationsPublicationIdWebhooksWebhookIdTestsResponse: core.serialization.ObjectSchema<
    serializers.GetPublicationsPublicationIdWebhooksWebhookIdTestsResponse.Raw,
    Beehiiv.GetPublicationsPublicationIdWebhooksWebhookIdTestsResponse
> = core.serialization.object({
    data: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    eventTimestamp: core.serialization.property("event_timestamp", core.serialization.number()),
    eventType: core.serialization.property("event_type", core.serialization.string()),
    uid: core.serialization.string(),
});

export declare namespace GetPublicationsPublicationIdWebhooksWebhookIdTestsResponse {
    interface Raw {
        data: Record<string, unknown>;
        event_timestamp: number;
        event_type: string;
        uid: string;
    }
}
