/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Beehiiv from "../../api/index";
import * as core from "../../core";
import { SegmentId } from "../resources/ids/types/SegmentId";
import { SegmentType } from "./SegmentType";
import { SegmentStatus } from "./SegmentStatus";
import { SegmentStats } from "./SegmentStats";

export const Segment: core.serialization.ObjectSchema<serializers.Segment.Raw, Beehiiv.Segment> =
    core.serialization.object({
        id: SegmentId,
        name: core.serialization.string(),
        type: SegmentType,
        lastCalculated: core.serialization.property("last_calculated", core.serialization.number().optional()),
        totalResults: core.serialization.property("total_results", core.serialization.number()),
        status: SegmentStatus,
        active: core.serialization.boolean(),
        stats: SegmentStats.optional(),
    });

export declare namespace Segment {
    interface Raw {
        id: SegmentId.Raw;
        name: string;
        type: SegmentType.Raw;
        last_calculated?: number | null;
        total_results: number;
        status: SegmentStatus.Raw;
        active: boolean;
        stats?: SegmentStats.Raw | null;
    }
}
