/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { BeehiivClient } from "../../src/Client";

describe("EmailBlasts", () => {
    test("index", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: [
                {
                    id: "blast_00000000-0000-0000-0000-000000000000",
                    subject_line: "Check out our latest news!",
                    preview_text: "Exciting updates inside",
                    created: 1666800076,
                    last_sent: 1666800076,
                    status: "active",
                },
            ],
            limit: 1,
            page: 1,
            total_results: 1,
            total_pages: 1,
        };
        server
            .mockEndpoint()
            .get("/publications/pub_00000000-0000-0000-0000-000000000000/email_blasts")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.emailBlasts.index("pub_00000000-0000-0000-0000-000000000000");
        expect(response).toEqual({
            data: [
                {
                    id: "blast_00000000-0000-0000-0000-000000000000",
                    subject_line: "Check out our latest news!",
                    preview_text: "Exciting updates inside",
                    created: 1666800076,
                    last_sent: 1666800076,
                    status: "active",
                },
            ],
            limit: 1,
            page: 1,
            total_results: 1,
            total_pages: 1,
        });
    });

    test("show", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                id: "blast_00000000-0000-0000-0000-000000000000",
                subject_line: "Check out our latest news!",
                preview_text: "Exciting updates inside",
                created: 1666800076,
                last_sent: 1666800076,
                status: "active",
            },
        };
        server
            .mockEndpoint()
            .get(
                "/publications/pub_00000000-0000-0000-0000-000000000000/email_blasts/blast_00000000-0000-0000-0000-000000000000",
            )
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.emailBlasts.show(
            "pub_00000000-0000-0000-0000-000000000000",
            "blast_00000000-0000-0000-0000-000000000000",
        );
        expect(response).toEqual({
            data: {
                id: "blast_00000000-0000-0000-0000-000000000000",
                subject_line: "Check out our latest news!",
                preview_text: "Exciting updates inside",
                created: 1666800076,
                last_sent: 1666800076,
                status: "active",
            },
        });
    });
});
