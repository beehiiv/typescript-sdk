/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { BeehiivClient } from "../../src/Client";

describe("Posts", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            title: "The Kitchen Sink Post (refactored version)",
            subtitle: "Contains lots of examples of each block type and the various settings you could use",
            blocks: [
                {
                    type: "heading",
                    level: "2",
                    textAlignment: "center",
                    text: "This is my block!!!",
                    anchorHeader: false,
                    anchorIncludeInToc: false,
                },
                { type: "list", listType: "ordered", items: ["a", "b", "c"] },
                { type: "list", listType: "ordered", items: ["d", "e", "f"], startNumber: 4 },
                { type: "list", listType: "unordered", items: ["g", "h", "i"], startNumber: 4 },
                {
                    type: "table",
                    headerRow: true,
                    headerColumn: true,
                    rows: [
                        [{ text: "A" }, { text: "B", alignment: "center" }, { text: "C", alignment: "right" }],
                        [
                            { text: "D", alignment: "right" },
                            { text: "E", alignment: "center" },
                            { text: "F", alignment: "left" },
                        ],
                    ],
                },
                {
                    type: "table",
                    rows: [
                        [{ text: "A" }, { text: "B" }, { text: "C" }],
                        [{ text: "D" }, { text: "E" }, { text: "F" }],
                    ],
                },
                {
                    type: "table",
                    headerRow: false,
                    rows: [
                        [{ text: "A" }, { text: "B" }, { text: "C" }],
                        [{ text: "D" }, { text: "E" }, { text: "F" }],
                    ],
                },
                {
                    type: "columns",
                    columns: [
                        { blocks: [{ type: "paragraph", plaintext: "Marble Column 1 {{email}}" }] },
                        {
                            blocks: [
                                {
                                    type: "image",
                                    imageUrl: "https://cdn.britannica.com/89/164789-050-D6B5E2C7/Barack-Obama-2012.jpg",
                                    url: "https://www.whitehouse.gov/",
                                    title: "Barry O",
                                    alt_text: "A picture of Barry Obama",
                                    caption: "One Cool President",
                                    captionAlignment: "center",
                                    imageAlignment: "right",
                                    width: 75,
                                },
                            ],
                        },
                    ],
                },
                { type: "advertisement", opportunity_id: "d8dfa6be-24b5-4cad-8350-ae44366dbd4c" },
                {
                    type: "image",
                    imageUrl: "https://cdn.britannica.com/89/164789-050-D6B5E2C7/Barack-Obama-2012.jpg",
                    url: "https://www.whitehouse.gov/",
                    title: "Barry O",
                    alt_text: "A picture of Barry Obama",
                    caption: "One Cool President",
                    captionAlignment: "center",
                    imageAlignment: "right",
                    width: 75,
                },
                {
                    type: "paragraph",
                    formattedText: [
                        { text: "This is going to be " },
                        { text: "a really, really awesome time ", styling: ["bold"] },
                        { text: "Are you ready for this?", styling: ["italic", "bold"] },
                    ],
                },
                {
                    type: "button",
                    href: "/subscribe",
                    target: "_blank",
                    alignment: "center",
                    size: "large",
                    text: "Subscribe",
                },
                {
                    type: "button",
                    href: "/signup",
                    target: "_blank",
                    alignment: "right",
                    size: "small",
                    text: "Sign Up",
                },
                { type: "button", href: "/", target: "_blank", text: "View Posts" },
                {
                    type: "heading",
                    level: "4",
                    textAlignment: "right",
                    text: "This is my block!!!",
                    anchorHeader: true,
                    anchorIncludeInToc: true,
                },
            ],
            post_template_id: "post_template_00000000-0000-0000-0000-000000000000",
            scheduled_at: "2024-12-25T12:00:00Z",
            custom_link_tracking_enabled: true,
            email_capture_type_override: "none",
            override_scheduled_at: "2022-10-26T14:01:16Z",
            social_share: "comments_and_likes_only",
            thumbnail_image_url:
                "https://images.squarespace-cdn.com/content/v1/56e4ca0540261d39b90e4b18/1605047208324-PONGEYKEAKTMM1LANHJ5/1ED706BF-A70B-4F26-B3D5-266B449DDA8A_1_105_c.jpeg",
            email_settings: {
                from_address: "from_address",
                custom_live_url: "https://beehiiv.com",
                display_title_in_email: true,
                display_byline_in_email: true,
                display_subtitle_in_email: true,
                email_header_engagement_buttons: "email_header_engagement_buttons",
                email_header_social_share: "email_header_social_share",
                email_preview_text: "email_preview_text",
                email_subject_line: "email_subject_line",
            },
            web_settings: { display_thumbnail_on_web: true, hide_from_feed: true, slug: "and-this-is-gonna-rock" },
            seo_settings: {
                default_description: "default_description",
                default_title: "default_title",
                og_description: "OpenGraph description",
                og_title: "Opengraph Title",
                twitter_description: "Twitter Stuff",
                twitter_title: "My Twitter Article",
            },
            content_tags: ["Obama", "Care", "Rocks", "Healthcare"],
            recipients: {
                web: { tier_ids: ["premium"] },
                email: {
                    tier_ids: ["premium", "free"],
                    include_segment_ids: ["seg_6426b403-39f5-42bd-86e9-9533fb0099e7"],
                    exclude_segment_ids: ["seg_e34b4085-aef6-449f-a699-7563f915f852"],
                },
            },
        };
        const rawResponseBody = { data: { id: "post_00000000-0000-0000-0000-000000000000" } };
        server
            .mockEndpoint()
            .post("/publications/pub_00000000-0000-0000-0000-000000000000/posts")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.posts.create("pub_00000000-0000-0000-0000-000000000000", {
            title: "The Kitchen Sink Post (refactored version)",
            subtitle: "Contains lots of examples of each block type and the various settings you could use",
            blocks: [
                {
                    type: "heading",
                    level: "2",
                    textAlignment: "center",
                    text: "This is my block!!!",
                    anchorHeader: false,
                    anchorIncludeInToc: false,
                },
                {
                    type: "list",
                    listType: "ordered",
                    items: ["a", "b", "c"],
                },
                {
                    type: "list",
                    listType: "ordered",
                    items: ["d", "e", "f"],
                    startNumber: 4,
                },
                {
                    type: "list",
                    listType: "unordered",
                    items: ["g", "h", "i"],
                    startNumber: 4,
                },
                {
                    type: "table",
                    headerRow: true,
                    headerColumn: true,
                    rows: [
                        [
                            {
                                text: "A",
                            },
                            {
                                text: "B",
                                alignment: "center",
                            },
                            {
                                text: "C",
                                alignment: "right",
                            },
                        ],
                        [
                            {
                                text: "D",
                                alignment: "right",
                            },
                            {
                                text: "E",
                                alignment: "center",
                            },
                            {
                                text: "F",
                                alignment: "left",
                            },
                        ],
                    ],
                },
                {
                    type: "table",
                    rows: [
                        [
                            {
                                text: "A",
                            },
                            {
                                text: "B",
                            },
                            {
                                text: "C",
                            },
                        ],
                        [
                            {
                                text: "D",
                            },
                            {
                                text: "E",
                            },
                            {
                                text: "F",
                            },
                        ],
                    ],
                },
                {
                    type: "table",
                    headerRow: false,
                    rows: [
                        [
                            {
                                text: "A",
                            },
                            {
                                text: "B",
                            },
                            {
                                text: "C",
                            },
                        ],
                        [
                            {
                                text: "D",
                            },
                            {
                                text: "E",
                            },
                            {
                                text: "F",
                            },
                        ],
                    ],
                },
                {
                    type: "columns",
                    columns: [
                        {
                            blocks: [
                                {
                                    type: "paragraph",
                                    plaintext: "Marble Column 1 {{email}}",
                                },
                            ],
                        },
                        {
                            blocks: [
                                {
                                    type: "image",
                                    imageUrl: "https://cdn.britannica.com/89/164789-050-D6B5E2C7/Barack-Obama-2012.jpg",
                                    url: "https://www.whitehouse.gov/",
                                    title: "Barry O",
                                    alt_text: "A picture of Barry Obama",
                                    caption: "One Cool President",
                                    captionAlignment: "center",
                                    imageAlignment: "right",
                                    width: 75,
                                },
                            ],
                        },
                    ],
                },
                {
                    type: "advertisement",
                    opportunity_id: "d8dfa6be-24b5-4cad-8350-ae44366dbd4c",
                },
                {
                    type: "image",
                    imageUrl: "https://cdn.britannica.com/89/164789-050-D6B5E2C7/Barack-Obama-2012.jpg",
                    url: "https://www.whitehouse.gov/",
                    title: "Barry O",
                    alt_text: "A picture of Barry Obama",
                    caption: "One Cool President",
                    captionAlignment: "center",
                    imageAlignment: "right",
                    width: 75,
                },
                {
                    type: "paragraph",
                    formattedText: [
                        {
                            text: "This is going to be ",
                        },
                        {
                            text: "a really, really awesome time ",
                            styling: ["bold"],
                        },
                        {
                            text: "Are you ready for this?",
                            styling: ["italic", "bold"],
                        },
                    ],
                },
                {
                    type: "button",
                    href: "/subscribe",
                    target: "_blank",
                    alignment: "center",
                    size: "large",
                    text: "Subscribe",
                },
                {
                    type: "button",
                    href: "/signup",
                    target: "_blank",
                    alignment: "right",
                    size: "small",
                    text: "Sign Up",
                },
                {
                    type: "button",
                    href: "/",
                    target: "_blank",
                    text: "View Posts",
                },
                {
                    type: "heading",
                    level: "4",
                    textAlignment: "right",
                    text: "This is my block!!!",
                    anchorHeader: true,
                    anchorIncludeInToc: true,
                },
            ],
            post_template_id: "post_template_00000000-0000-0000-0000-000000000000",
            scheduled_at: "2024-12-25T12:00:00Z",
            custom_link_tracking_enabled: true,
            email_capture_type_override: "none",
            override_scheduled_at: "2022-10-26T14:01:16Z",
            social_share: "comments_and_likes_only",
            thumbnail_image_url:
                "https://images.squarespace-cdn.com/content/v1/56e4ca0540261d39b90e4b18/1605047208324-PONGEYKEAKTMM1LANHJ5/1ED706BF-A70B-4F26-B3D5-266B449DDA8A_1_105_c.jpeg",
            email_settings: {
                from_address: "from_address",
                custom_live_url: "https://beehiiv.com",
                display_title_in_email: true,
                display_byline_in_email: true,
                display_subtitle_in_email: true,
                email_header_engagement_buttons: "email_header_engagement_buttons",
                email_header_social_share: "email_header_social_share",
                email_preview_text: "email_preview_text",
                email_subject_line: "email_subject_line",
            },
            web_settings: {
                display_thumbnail_on_web: true,
                hide_from_feed: true,
                slug: "and-this-is-gonna-rock",
            },
            seo_settings: {
                default_description: "default_description",
                default_title: "default_title",
                og_description: "OpenGraph description",
                og_title: "Opengraph Title",
                twitter_description: "Twitter Stuff",
                twitter_title: "My Twitter Article",
            },
            content_tags: ["Obama", "Care", "Rocks", "Healthcare"],
            recipients: {
                web: {
                    tier_ids: ["premium"],
                },
                email: {
                    tier_ids: ["premium", "free"],
                    include_segment_ids: ["seg_6426b403-39f5-42bd-86e9-9533fb0099e7"],
                    exclude_segment_ids: ["seg_e34b4085-aef6-449f-a699-7563f915f852"],
                },
            },
        });
        expect(response).toEqual({
            data: {
                id: "post_00000000-0000-0000-0000-000000000000",
            },
        });
    });

    test("index", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: [
                {
                    id: "post_00000000-0000-0000-0000-000000000000",
                    subtitle: "New post subtitle",
                    title: "New Post Title",
                    authors: ["Clark Kent"],
                    created: 1666800076,
                    status: "draft",
                    publish_date: 1666800076,
                    displayed_date: 1666800076,
                    split_tested: true,
                    subject_line: "Check this out",
                    preview_text: "More news on the horizon",
                    slug: "slug",
                    thumbnail_url: "thumbnail_url",
                    web_url: "web_url",
                    audience: "free",
                    platform: "web",
                    content_tags: ["content_tags"],
                    meta_default_description: "A post with great content",
                    meta_default_title: "My great post",
                    hidden_from_feed: true,
                    content: {
                        free: {
                            web: "<HTML><body><h1>New Post</h1></body></HTML>",
                            email: "<HTML><body><h1>New Post</h1></body></HTML>",
                            rss: "<HTML><body><h1>New Post</h1></body></HTML>",
                        },
                        premium: {
                            web: "<HTML><body><h1>New Post</h1></body></HTML>",
                            email: "<HTML><body><h1>New Post</h1></body></HTML>",
                        },
                    },
                    stats: {
                        email: {
                            recipients: 100,
                            delivered: 100,
                            opens: 50,
                            unique_opens: 45,
                            open_rate: 45,
                            clicks: 10,
                            unique_clicks: 8,
                            click_rate: 8,
                            unsubscribes: 1,
                            spam_reports: 1,
                        },
                        web: { views: 200, clicks: 40 },
                        clicks: [
                            {
                                url: "https://www.google.com",
                                email: { clicks: 10, unique_clicks: 8, click_through_rate: 80 },
                                web: { clicks: 40, unique_clicks: 40, click_through_rate: 20 },
                                total_clicks: 50,
                                total_unique_clicks: 48,
                                total_click_through_rate: 40,
                            },
                        ],
                    },
                },
            ],
            limit: 1,
            page: 1,
            total_results: 1,
            total_pages: 1,
        };
        server
            .mockEndpoint()
            .get("/publications/pub_00000000-0000-0000-0000-000000000000/posts")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.posts.index("pub_00000000-0000-0000-0000-000000000000");
        expect(response).toEqual({
            data: [
                {
                    id: "post_00000000-0000-0000-0000-000000000000",
                    subtitle: "New post subtitle",
                    title: "New Post Title",
                    authors: ["Clark Kent"],
                    created: 1666800076,
                    status: "draft",
                    publish_date: 1666800076,
                    displayed_date: 1666800076,
                    split_tested: true,
                    subject_line: "Check this out",
                    preview_text: "More news on the horizon",
                    slug: "slug",
                    thumbnail_url: "thumbnail_url",
                    web_url: "web_url",
                    audience: "free",
                    platform: "web",
                    content_tags: ["content_tags"],
                    meta_default_description: "A post with great content",
                    meta_default_title: "My great post",
                    hidden_from_feed: true,
                    content: {
                        free: {
                            web: "<HTML><body><h1>New Post</h1></body></HTML>",
                            email: "<HTML><body><h1>New Post</h1></body></HTML>",
                            rss: "<HTML><body><h1>New Post</h1></body></HTML>",
                        },
                        premium: {
                            web: "<HTML><body><h1>New Post</h1></body></HTML>",
                            email: "<HTML><body><h1>New Post</h1></body></HTML>",
                        },
                    },
                    stats: {
                        email: {
                            recipients: 100,
                            delivered: 100,
                            opens: 50,
                            unique_opens: 45,
                            open_rate: 45,
                            clicks: 10,
                            unique_clicks: 8,
                            click_rate: 8,
                            unsubscribes: 1,
                            spam_reports: 1,
                        },
                        web: {
                            views: 200,
                            clicks: 40,
                        },
                        clicks: [
                            {
                                url: "https://www.google.com",
                                email: {
                                    clicks: 10,
                                    unique_clicks: 8,
                                    click_through_rate: 80,
                                },
                                web: {
                                    clicks: 40,
                                    unique_clicks: 40,
                                    click_through_rate: 20,
                                },
                                total_clicks: 50,
                                total_unique_clicks: 48,
                                total_click_through_rate: 40,
                            },
                        ],
                    },
                },
            ],
            limit: 1,
            page: 1,
            total_results: 1,
            total_pages: 1,
        });
    });

    test("aggregate_stats", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                stats: {
                    email: {
                        recipients: 100,
                        delivered: 100,
                        opens: 50,
                        unique_opens: 45,
                        open_rate: 45,
                        clicks: 10,
                        unique_clicks: 8,
                        click_rate: 8,
                        unsubscribes: 1,
                        spam_reports: 1,
                    },
                    web: { views: 200, clicks: 40 },
                    clicks: [
                        {
                            url: "https://www.google.com",
                            email: { clicks: 10, unique_clicks: 8, click_through_rate: 80 },
                            web: { clicks: 40, unique_clicks: 40, click_through_rate: 20 },
                            total_clicks: 50,
                            total_unique_clicks: 48,
                            total_click_through_rate: 40,
                        },
                    ],
                },
            },
        };
        server
            .mockEndpoint()
            .get("/publications/pub_00000000-0000-0000-0000-000000000000/posts/aggregate_stats")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.posts.aggregateStats("pub_00000000-0000-0000-0000-000000000000");
        expect(response).toEqual({
            data: {
                stats: {
                    email: {
                        recipients: 100,
                        delivered: 100,
                        opens: 50,
                        unique_opens: 45,
                        open_rate: 45,
                        clicks: 10,
                        unique_clicks: 8,
                        click_rate: 8,
                        unsubscribes: 1,
                        spam_reports: 1,
                    },
                    web: {
                        views: 200,
                        clicks: 40,
                    },
                    clicks: [
                        {
                            url: "https://www.google.com",
                            email: {
                                clicks: 10,
                                unique_clicks: 8,
                                click_through_rate: 80,
                            },
                            web: {
                                clicks: 40,
                                unique_clicks: 40,
                                click_through_rate: 20,
                            },
                            total_clicks: 50,
                            total_unique_clicks: 48,
                            total_click_through_rate: 40,
                        },
                    ],
                },
            },
        });
    });

    test("show", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                id: "post_00000000-0000-0000-0000-000000000000",
                subtitle: "New post subtitle",
                title: "New Post Title",
                authors: ["Clark Kent"],
                created: 1666800076,
                status: "draft",
                publish_date: 1666800076,
                displayed_date: 1666800076,
                split_tested: true,
                subject_line: "Check this out",
                preview_text: "More news on the horizon",
                slug: "slug",
                thumbnail_url: "thumbnail_url",
                web_url: "web_url",
                audience: "free",
                platform: "web",
                content_tags: ["content_tags"],
                meta_default_description: "A post with great content",
                meta_default_title: "My great post",
                content: {
                    free: {
                        web: "<HTML><body><h1>New Post</h1></body></HTML>",
                        email: "<HTML><body><h1>New Post</h1></body></HTML>",
                        rss: "<HTML><body><h1>New Post</h1></body></HTML>",
                    },
                    premium: {
                        web: "<HTML><body><h1>New Post</h1></body></HTML>",
                        email: "<HTML><body><h1>New Post</h1></body></HTML>",
                    },
                },
                stats: {
                    email: {
                        recipients: 100,
                        delivered: 100,
                        opens: 50,
                        unique_opens: 45,
                        clicks: 10,
                        unique_clicks: 8,
                        unsubscribes: 1,
                        spam_reports: 1,
                    },
                    web: { views: 200, clicks: 40 },
                    clicks: [{ total_clicks: 10, total_unique_clicks: 8, total_click_through_rate: 30 }],
                },
                hidden_from_feed: true,
            },
        };
        server
            .mockEndpoint()
            .get(
                "/publications/pub_00000000-0000-0000-0000-000000000000/posts/post_00000000-0000-0000-0000-000000000000",
            )
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.posts.show(
            "post_00000000-0000-0000-0000-000000000000",
            "pub_00000000-0000-0000-0000-000000000000",
        );
        expect(response).toEqual({
            data: {
                id: "post_00000000-0000-0000-0000-000000000000",
                subtitle: "New post subtitle",
                title: "New Post Title",
                authors: ["Clark Kent"],
                created: 1666800076,
                status: "draft",
                publish_date: 1666800076,
                displayed_date: 1666800076,
                split_tested: true,
                subject_line: "Check this out",
                preview_text: "More news on the horizon",
                slug: "slug",
                thumbnail_url: "thumbnail_url",
                web_url: "web_url",
                audience: "free",
                platform: "web",
                content_tags: ["content_tags"],
                meta_default_description: "A post with great content",
                meta_default_title: "My great post",
                content: {
                    free: {
                        web: "<HTML><body><h1>New Post</h1></body></HTML>",
                        email: "<HTML><body><h1>New Post</h1></body></HTML>",
                        rss: "<HTML><body><h1>New Post</h1></body></HTML>",
                    },
                    premium: {
                        web: "<HTML><body><h1>New Post</h1></body></HTML>",
                        email: "<HTML><body><h1>New Post</h1></body></HTML>",
                    },
                },
                stats: {
                    email: {
                        recipients: 100,
                        delivered: 100,
                        opens: 50,
                        unique_opens: 45,
                        clicks: 10,
                        unique_clicks: 8,
                        unsubscribes: 1,
                        spam_reports: 1,
                    },
                    web: {
                        views: 200,
                        clicks: 40,
                    },
                    clicks: [
                        {
                            total_clicks: 10,
                            total_unique_clicks: 8,
                            total_click_through_rate: 30,
                        },
                    ],
                },
                hidden_from_feed: true,
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {};
        server
            .mockEndpoint()
            .delete(
                "/publications/pub_00000000-0000-0000-0000-000000000000/posts/post_00000000-0000-0000-0000-000000000000",
            )
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.posts.delete(
            "post_00000000-0000-0000-0000-000000000000",
            "pub_00000000-0000-0000-0000-000000000000",
        );
        expect(response).toEqual({});
    });
});
