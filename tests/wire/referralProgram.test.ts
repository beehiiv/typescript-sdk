/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { BeehiivClient } from "../../src/Client";

describe("ReferralProgram", () => {
    test("show", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: [
                {
                    id: "mile_00000000-0000-0000-0000-000000000000",
                    auto_fulfill: true,
                    num_referrals: 1,
                    reward: {
                        id: "rew_00000000-0000-0000-0000-000000000000",
                        name: "name",
                        description: "description",
                        image_url: "image_url",
                        type: "physical",
                    },
                },
            ],
            limit: 1,
            page: 1,
            total_results: 1,
            total_pages: 1,
        };
        server
            .mockEndpoint()
            .get("/publications/pub_00000000-0000-0000-0000-000000000000/referral_program")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.referralProgram.show("pub_00000000-0000-0000-0000-000000000000");
        expect(response).toEqual({
            data: [
                {
                    id: "mile_00000000-0000-0000-0000-000000000000",
                    auto_fulfill: true,
                    num_referrals: 1,
                    reward: {
                        id: "rew_00000000-0000-0000-0000-000000000000",
                        name: "name",
                        description: "description",
                        image_url: "image_url",
                        type: "physical",
                    },
                },
            ],
            limit: 1,
            page: 1,
            total_results: 1,
            total_pages: 1,
        });
    });
});
