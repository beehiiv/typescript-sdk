/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { BeehiivClient } from "../../src/Client";

describe("SubscriptionTags", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = { tags: ["Premium", "Basic"] };
        const rawResponseBody = {
            data: {
                id: "sub_00000000-0000-0000-0000-000000000000",
                email: "example@example.com",
                status: "validating",
                created: 1666800076,
                subscription_tier: "free",
                subscription_premium_tier_names: ["Premium", "Gold"],
                utm_source: "Twitter",
                utm_medium: "organic",
                utm_channel: "website",
                utm_campaign: "utm_campaign",
                referring_site: "https://www.blog.com",
                referral_code: "referral_code",
                tags: ["Premium", "Basic", "Active", "Engaged"],
            },
        };
        server
            .mockEndpoint()
            .post("/publications/publicationId/subscriptions/subscriptionId/tags")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.subscriptionTags.create("publicationId", "subscriptionId", {
            tags: ["Premium", "Basic"],
        });
        expect(response).toEqual({
            data: {
                id: "sub_00000000-0000-0000-0000-000000000000",
                email: "example@example.com",
                status: "validating",
                created: 1666800076,
                subscription_tier: "free",
                subscription_premium_tier_names: ["Premium", "Gold"],
                utm_source: "Twitter",
                utm_medium: "organic",
                utm_channel: "website",
                utm_campaign: "utm_campaign",
                referring_site: "https://www.blog.com",
                referral_code: "referral_code",
                tags: ["Premium", "Basic", "Active", "Engaged"],
            },
        });
    });
});
