/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { BeehiivClient } from "../../src/Client";

describe("Tiers", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            name: "Gold Tier",
            description: "Our premium tier with exclusive benefits",
            prices_attributes: [
                {
                    currency: "usd",
                    amount_cents: 500,
                    enabled: true,
                    interval: "month",
                    interval_display: "Monthly",
                    cta: "Subscribe Now",
                    features: ["Exclusive content", "Ad-free experience", "Priority support"],
                },
            ],
        };
        const rawResponseBody = {
            data: {
                id: "tier_00000000-0000-0000-0000-000000000000",
                name: "Gold",
                status: "active",
                description: "description",
                stats: { active_subscriptions: 1 },
                prices: [{ id: "price_00000000-0000-0000-0000-000000000000", amount_cents: 500 }],
            },
        };
        server
            .mockEndpoint()
            .post("/publications/pub_00000000-0000-0000-0000-000000000000/tiers")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tiers.create("pub_00000000-0000-0000-0000-000000000000", {
            name: "Gold Tier",
            description: "Our premium tier with exclusive benefits",
            prices_attributes: [
                {
                    currency: "usd",
                    amount_cents: 500,
                    enabled: true,
                    interval: "month",
                    interval_display: "Monthly",
                    cta: "Subscribe Now",
                    features: ["Exclusive content", "Ad-free experience", "Priority support"],
                },
            ],
        });
        expect(response).toEqual({
            data: {
                id: "tier_00000000-0000-0000-0000-000000000000",
                name: "Gold",
                status: "active",
                description: "description",
                stats: {
                    active_subscriptions: 1,
                },
                prices: [
                    {
                        id: "price_00000000-0000-0000-0000-000000000000",
                        amount_cents: 500,
                    },
                ],
            },
        });
    });

    test("index", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: [
                {
                    id: "tier_00000000-0000-0000-0000-000000000000",
                    name: "Gold",
                    status: "active",
                    description: "description",
                    stats: { active_subscriptions: 1 },
                    prices: [{ id: "price_00000000-0000-0000-0000-000000000000", amount_cents: 500 }],
                },
            ],
            limit: 1,
            page: 1,
            total_results: 1,
            total_pages: 1,
        };
        server
            .mockEndpoint()
            .get("/publications/pub_00000000-0000-0000-0000-000000000000/tiers")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tiers.index("pub_00000000-0000-0000-0000-000000000000");
        expect(response).toEqual({
            data: [
                {
                    id: "tier_00000000-0000-0000-0000-000000000000",
                    name: "Gold",
                    status: "active",
                    description: "description",
                    stats: {
                        active_subscriptions: 1,
                    },
                    prices: [
                        {
                            id: "price_00000000-0000-0000-0000-000000000000",
                            amount_cents: 500,
                        },
                    ],
                },
            ],
            limit: 1,
            page: 1,
            total_results: 1,
            total_pages: 1,
        });
    });

    test("show", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            data: {
                id: "tier_00000000-0000-0000-0000-000000000000",
                name: "Gold",
                status: "active",
                description: "description",
                stats: { active_subscriptions: 1 },
                prices: [{ id: "price_00000000-0000-0000-0000-000000000000", amount_cents: 500 }],
            },
        };
        server
            .mockEndpoint()
            .get(
                "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
            )
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tiers.show(
            "pub_00000000-0000-0000-0000-000000000000",
            "tier_00000000-0000-0000-0000-000000000000",
        );
        expect(response).toEqual({
            data: {
                id: "tier_00000000-0000-0000-0000-000000000000",
                name: "Gold",
                status: "active",
                description: "description",
                stats: {
                    active_subscriptions: 1,
                },
                prices: [
                    {
                        id: "price_00000000-0000-0000-0000-000000000000",
                        amount_cents: 500,
                    },
                ],
            },
        });
    });

    test("put", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            name: "Gold",
            description: "Our premium tier with exclusive benefits",
            prices_attributes: [
                {
                    id: "price_00000000-0000-0000-0000-000000000000",
                    currency: "usd",
                    amount_cents: 500,
                    interval: "month",
                    interval_display: "Monthly",
                    cta: "Subscribe Now",
                    features: ["Exclusive content"],
                    delete: true,
                },
            ],
        };
        const rawResponseBody = {
            data: {
                id: "tier_00000000-0000-0000-0000-000000000000",
                name: "Gold",
                status: "active",
                description: "description",
                stats: { active_subscriptions: 1 },
                prices: [{ id: "price_00000000-0000-0000-0000-000000000000", amount_cents: 500 }],
            },
        };
        server
            .mockEndpoint()
            .put(
                "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
            )
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tiers.put(
            "pub_00000000-0000-0000-0000-000000000000",
            "tier_00000000-0000-0000-0000-000000000000",
            {
                name: "Gold",
                description: "Our premium tier with exclusive benefits",
                prices_attributes: [
                    {
                        id: "price_00000000-0000-0000-0000-000000000000",
                        currency: "usd",
                        amount_cents: 500,
                        interval: "month",
                        interval_display: "Monthly",
                        cta: "Subscribe Now",
                        features: ["Exclusive content"],
                        delete: true,
                    },
                ],
            },
        );
        expect(response).toEqual({
            data: {
                id: "tier_00000000-0000-0000-0000-000000000000",
                name: "Gold",
                status: "active",
                description: "description",
                stats: {
                    active_subscriptions: 1,
                },
                prices: [
                    {
                        id: "price_00000000-0000-0000-0000-000000000000",
                        amount_cents: 500,
                    },
                ],
            },
        });
    });

    test("patch", async () => {
        const server = mockServerPool.createServer();
        const client = new BeehiivClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {
            name: "Gold",
            description: "Our premium tier with exclusive benefits",
            prices_attributes: [
                {
                    id: "price_00000000-0000-0000-0000-000000000000",
                    currency: "usd",
                    amount_cents: 500,
                    interval: "month",
                    interval_display: "Monthly",
                    cta: "Subscribe Now",
                    features: ["Exclusive content"],
                    delete: true,
                },
            ],
        };
        const rawResponseBody = {
            data: {
                id: "tier_00000000-0000-0000-0000-000000000000",
                name: "Gold",
                status: "active",
                description: "description",
                stats: { active_subscriptions: 1 },
                prices: [{ id: "price_00000000-0000-0000-0000-000000000000", amount_cents: 500 }],
            },
        };
        server
            .mockEndpoint()
            .patch(
                "/publications/pub_00000000-0000-0000-0000-000000000000/tiers/tier_00000000-0000-0000-0000-000000000000",
            )
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.tiers.patch(
            "pub_00000000-0000-0000-0000-000000000000",
            "tier_00000000-0000-0000-0000-000000000000",
            {
                name: "Gold",
                description: "Our premium tier with exclusive benefits",
                prices_attributes: [
                    {
                        id: "price_00000000-0000-0000-0000-000000000000",
                        currency: "usd",
                        amount_cents: 500,
                        interval: "month",
                        interval_display: "Monthly",
                        cta: "Subscribe Now",
                        features: ["Exclusive content"],
                        delete: true,
                    },
                ],
            },
        );
        expect(response).toEqual({
            data: {
                id: "tier_00000000-0000-0000-0000-000000000000",
                name: "Gold",
                status: "active",
                description: "description",
                stats: {
                    active_subscriptions: 1,
                },
                prices: [
                    {
                        id: "price_00000000-0000-0000-0000-000000000000",
                        amount_cents: 500,
                    },
                ],
            },
        });
    });
});
